name: Deploy

on:
  push:
    branches:
      - 'master'

jobs:

  test:
    name: Test - Units & Integrations
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4
      - name: Maven Package
        run: mvn -B clean package -DskipTests
      - name: Maven Verify
        run: mvn -B clean verify -Pintegration-test
      - name: Upload to codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash) # Upload to Codecov

  sonar:
    name: Test - SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v2.1.3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v2.1.3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

  build:
    name: Build native application
    runs-on: ubuntu-latest
    needs: [ sonar, test ]
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build native with Maven
        run: mvn -B package -Pnative -Dquarkus.native.container-build=true -DskipTests
      - name: Upload target for next job
        uses: actions/upload-artifact@v2.2.1
        with:
          name: target
          path: target

  deploy_to_heroku:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Download target from previous job
        uses: actions/download-artifact@v2.0.6
        with:
          name: target
      - name: Login into Heroku
        uses: actions/heroku@master
        with:
          args: container:login
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP: ${{ secrets.HEROKU_APP }}
      - name: Build and Push to Heroku Registry
        uses: actions/heroku@master
        with:
          args: container:push web
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP: ${{ secrets.HEROKU_APP }}
      - name: Trigger release in Heroku
        uses: actions/heroku@master
        with:
          args: container:release web
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP: ${{ secrets.HEROKU_APP }}